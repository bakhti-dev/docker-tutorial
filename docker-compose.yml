version: '3.8'

services:
  app:
    build:
      context: .
    image: my-app-image
    container_name: my-app-container
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - ./a_core/.env
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:15
    container_name: my-postgres-container
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: my-redis-container
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
    image: my-app-image
    container_name: my-celery-container
    command: celery -A a_core worker --loglevel=info --without-gossip --without-mingle --without-heartbeat
    volumes:
      - .:/app
    env_file:
      - ./a_core/.env
    depends_on:
      - postgres
      - redis

  flower:
    build:
      context: .
    image: my-app-image
    container_name: my-flower-container
    command: celery -A a_core flower --port=5555 --basic_auth=admin:1212
    ports:
      - "5555:5555"
    env_file:
      - ./a_core/.env
    depends_on:
      - redis

  beat:
    build:
      context: .
    image: my-app-image
    container_name: my-beat-container
    command: celery -A a_core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./a_core/.env
    depends_on:
      - redis
      - app

volumes:
  postgres_data:
  redis_data:













# name: my-docker-project

# services:
#   app:
#     build: .
#     image: my-app-image
#     container_name: my-app-container
#     command: /app/entrypoint.sh
#     ports:
#       - "8000:8000"
#     volumes:
#       - .:/app
#     env_file:
#       - ./a_core/.env
#     depends_on:
#       - postgres
#       - redis

#   postgres:
#     image: postgres
#     container_name: my-postgres-container
#     restart: unless-stopped
#     environment:
#       POSTGRES_DB: postgres
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   redis:
#     image: "redis:alpine"
#     container_name: my-redis-container
#     restart: unless-stopped
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data

#   celery:
#     image: my-app-image
#     container_name: my-celery-container
#     command: celery -A a_core worker -E -l info
#     volumes:
#       - .:/app
#     env_file:
#       - ./a_core/.env
#     depends_on:
#       - postgres
#       - redis
#       - app

#   flower:
#     image: my-app-image
#     container_name: my-flower-container
#     command: celery -A a_core flower --basic_auth=admin:1212
#     ports:
#       - "5555:5555"
#     env_file:
#       - ./a_core/.env
#     depends_on:
#       - redis

#   beat:
#     image: my-app-image
#     container_name: my-beat-container
#     command: celery -A a_core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
#     volumes:
#       - .:/app
#     env_file:
#       - ./a_core/.env
#     depends_on:
#       - redis
#       - app

# volumes:
#   postgres_data:
#   redis_data:





# # name: my-docker-project

# # services:
# #   app:
# #     image: my-docker-image
# #     container_name: my-docker-container_name
# #     ports:
# #       - "8001:8000"
# #     volumes:
# #       - .:/app